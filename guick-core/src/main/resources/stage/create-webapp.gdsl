def packageBase = project.packageBase

def lang = "java" //TODO to parametrize

guick {

    installPom {
        // [input: "stage/config/settings.gradle.vm",  output: "/settings.gradle"],
        // [input: "stage/config/build-root.gradle.vm",  output: "/build.gradle"],
        // [input: "stage/config/build.gradle.vm",  output: "/api/build.gradle"],
        "configs" {
            templates = [
                    [input: "stage/config/pom-parent.xml.vm", output: "/pom.xml"],
                    [input: "stage/config/pom.xml.vm", output: "/api/pom.xml"],
                    [input: "stage/config/context.xml.ftl", output: "/api/src/main/webapp/META-INF/context.xml"],
                    [input: "stage/config/web.xml.ftl", output: "/api/src/main/webapp/WEB-INF/web.xml"],

                    [input: "stage/config/pom-front-end.xml.vm", output: "/front-end/pom.xml"],
                    [input: "stage/config/.bowerrc", output: "/front-end/.bowerrc"],
                    [input: "stage/config/.jshintrc", output: "/front-end/.jshintrc"],
                    [input: "stage/config/.gitignore", output: "/front-end/.gitignore"],
                    [input: "stage/config/.gitattributes", output: "/front-end/.gitattributes"],

                    [input: "stage/config/bower.json.vm", output: "/front-end/bower.json"],
                    [input: "stage/config/Gruntfile.js", output: "/front-end/Gruntfile.js"],
                    [input: "stage/config/package.json.vm", output: "/front-end/package.json"],

                    [input: "stage/crud/html/metrics.html", output: "/front-end/app/views/metrics.html"],
                    [input: "stage/crud/html/health.html", output:  "/front-end/app/views/health.html"],
                    [input: "stage/crud/html/audits.html", output:  "/front-end/app/views/audits.html"]
            ]
        }

        "resources" {
            templates = [
                    [input: "stage/config/application.properties.vm", output: "/api/src/main/resources/application.properties"],
                    [input: "stage/config/ehcache.xml.vm", output: "/api/src/main/resources/ehcache.xml"],
                    [input: "archetype/resources/logback.xml.vm", output: "/api/src/main/resources/logback.xml"],
                    [input: "archetype/testResources/logback-test.xml.vm", output: "/api/src/test/resources/logback-test.xml.vm"]
            ]
        }

        //[input: "crud/AbstractTest.groovy.vm", output: "/api/src/test/groovy/${packageBase}/"]
        "single-generateds" {
            templates = [
                    [input: "stage/config/Application.vm", output: "/api/src/main/${lang}/${packageBase}/Application." + lang],
                    [input: "stage/config/ApplicationWeb.vm", output: "/api/src/main/${lang}/${packageBase}/ApplicationWeb." + lang],
                    [input: "stage/config/application.properties.vm", output: "/api/src/main/resources/${packageBase}/"]

            ]
        }
    }
}
