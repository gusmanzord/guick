#set( $js  = '$')
#set( $open  = '${')
#set( $close = '}')
#set( $entityBeanName = ${util.uncapitalize($entity.name)} )
#set( $projectBeanName = ${util.uncapitalize($project.name)} )
'use strict';

/**
 *  Guick Generate class: https://github.com/wdavilaneto/guick
 *  Author: service-wdavilaneto@redhat.com
 *  This source is free under The Apache Software License, Version 2.0
 *  license url http://www.apache.org/licenses/LICENSE-2.0.txt
 *
 * @ngdoc function
 * @name ${projectBeanName}App.controller:dashboardController
 * @description
 * # dashboardController
 * Controller of the ${projectBeanName}App
 */
angular.module('${projectBeanName}App').controller('dashboardController', ['${js}scope', '${js}routeParams', '${js}modal', '${js}location', 'dashboardService', function (${js}scope, ${js}routeParams , ${js}modal, ${js}location, dashboardService ) {

    ${js}scope.allCount = [];

    dashboardService.allCount( {}, function (data) {
        ${js}scope.allCount = [{ key: 'Quantidade por Entitdade',values: data }];
    });

#set( $mainEntities = ${project.getAllMainEntities()} )
#foreach( ${entity} in ${mainEntities} )
#foreach( ${e} in ${entity.getOneToManyProperties()} )
#set($numericProperties = ${e.referedEntity.getAllNumericProperties()} )
#if( !${e.referedEntity.looksLikeEnum()} && ${numericProperties.size()} > 0 && !${entity.getId().isEmbeddable()} && !${e.referedEntity.id.isEmbeddable()})
#set($capitalizedProp = $util.capitalize( ${numericProperties[0].name} ) )
    ${js}scope.options${entity}WithSum${e.referedEntity.name}${capitalizedProp} = dashboardService.getBasicOptions();
    ${js}scope.options${entity}WithSum${e.referedEntity.name}${capitalizedProp}.chart.xAxis.axisLabel = "${entity}";
    ${js}scope.options${entity}WithSum${e.referedEntity.name}${capitalizedProp}.chart.yAxis.axisLabel = "${e.referedEntity.name} ${capitalizedProp}";
    dashboardService.get${entity}WithSum${e.referedEntity.name}${capitalizedProp}( {}, function (data) {
        ${js}scope.get${entity}WithSum${e.referedEntity.name}${capitalizedProp} = [{ key: '${entity} With Sum of ${e.referedEntity.name} ${capitalizedProp}',values: data }];
    });
#end
#if( !${e.referedEntity.looksLikeEnum()} && ${numericProperties.size()} > 1 && !${entity.getId().isEmbeddable()} && !${e.referedEntity.id.isEmbeddable()})
#set($capitalizedProp = $util.uncapitalize( ${numericProperties[1].name} ) )
    ${js}scope.options${entity}WithSum${e.referedEntity.name}${capitalizedProp} = dashboardService.getBasicOptions();
    ${js}scope.options${entity}WithSum${e.referedEntity.name}${capitalizedProp}.chart.xAxis.axisLabel = "${entity}";
    ${js}scope.options${entity}WithSum${e.referedEntity.name}${capitalizedProp}.chart.yAxis.axisLabel = "${e.referedEntity.name}${capitalizedProp}";
    dashboardService.get${entity}WithSum${e.referedEntity.name}${capitalizedProp}( {}, function (data) {
        ${js}scope.get${entity}WithSum${e.referedEntity.name}${capitalizedProp} = [{ key: '${entity} With Sum of ${e.referedEntity.name} ${capitalizedProp}',values: data }];
    });
#end
#if( !${e.referedEntity.looksLikeEnum()} && ${numericProperties.size()} > 2 && !${entity.getId().isEmbeddable()} && !${e.referedEntity.id.isEmbeddable()})
#set($capitalizedProp = $util.uncapitalize( ${numericProperties[2].name} ) )
    ${js}scope.options${entity}WithSum${e.referedEntity.name}${capitalizedProp} = dashboardService.getBasicOptions();
    ${js}scope.options${entity}WithSum${e.referedEntity.name}${capitalizedProp}.chart.xAxis.axisLabel = "${entity}";
    ${js}scope.options${entity}WithSum${e.referedEntity.name}${capitalizedProp}.chart.yAxis.axisLabel = "${e.referedEntity.name}${capitalizedProp}";
    dashboardService.get${entity}WithSum${e.referedEntity.name}${capitalizedProp}( {}, function (data) {
        ${js}scope.get${entity}WithSum${e.referedEntity.name}${capitalizedProp} = [{ key: '${entity} With Sum of ${e.referedEntity.name} ${capitalizedProp}',values: data }];
    });
#end
#end
#end

}]);

