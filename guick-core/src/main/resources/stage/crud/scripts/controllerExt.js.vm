#set( $js  = "$")
#set( $open  = "${")
#set( $close = "}")
#set( $entityBeanName = ${util.uncapitalize($entity.name)} )
#set( $projectBeanName = ${util.uncapitalize($project.name)} )
'use strict';

/**
 *  Guick Generate class: https://github.com/wdavilaneto/guick
 *  Author: service-wdavilaneto@redhat.com
 *  This source is free under The Apache Software License, Version 2.0
 *  license url http://www.apache.org/licenses/LICENSE-2.0.txt
 *
 * @ngdoc function
 * @name ${projectBeanName}App.controller:${entityBeanName}ExtController
 * @description
 * # ${entityBeanName}ExtController
 * Extended Controller pr Master Detail and other specific operations of the ${projectBeanName}App
 */
angular.module('${projectBeanName}App').controller('${entityBeanName}ExtController', ['${js}scope', '${js}routeParams', '${js}modal', '${js}location', 'jsog', '${entityBeanName}Service', #foreach( ${ent} in ${entity.getDistinctedAllComplexProperties()})#set( $beanName = ${util.uncapitalize($ent.referedEntity.name)} )#if(${beanName} != ${entityBeanName})'${beanName}Service', #{end}#{end}  function (${js}scope, ${js}routeParams , ${js}modal, ${js}location, jsog, ${entityBeanName}Service #foreach( ${ent} in ${entity.getDistinctedAllComplexProperties()})#set( $beanName = ${util.uncapitalize($ent.referedEntity.name)} )#if(${beanName} != ${entityBeanName}), ${beanName}Service#{end}#{end} ) {

    ${js}scope.create = function ( parent ) {
        ${js}scope.selected = null;
        ${js}scope.selected = {
            ${entityBeanName}:parent
        };
    };

    // ******************************************************************************************
    // Master Details: Operations for Search and  editing of OneToMany/ManyToMany
    // ******************************************************************************************
#foreach( ${ent} in ${entity.getDistinctedAllComplexProperties()} )
#if( ${ent.isOneToMany()} ) #### || ent.isManyToMany()  TODO Many to many needs to change services/repository


    ${js}scope.get${ent.referedEntity.name} = function ( ${ent.referedEntity.beanName}Id ) {
        ${ent.referedEntity.beanName}Service.get( {'id':${ent.referedEntity.beanName}Id} , function (data) {
            ${js}scope.masterDetail = true; // TODO fade out
            ${js}scope.selected${ent.referedEntity.name}  = jsog.decode(data);
        }, function (data){
            // Case error or not found ..back to search filter
            ${js}location.path('/Cargos/'+ ${js}routeParams.id);
        });
    };

    if (${js}routeParams.child == '${ent.referedEntity.name}' && ${js}routeParams.${ent.referedEntity.beanName}Id) {
        ${js}scope.masterDetail = ${js}routeParams.child;  // TODO fade out ?
        ${js}scope.get${ent.referedEntity.name}( ${js}routeParams.${ent.referedEntity.beanName}Id );
    }

    ${js}scope.grid${ent.referedEntity.name}Options = ${ent.referedEntity.beanName}Service.createGridOptions(true);
    ${js}scope.${ent.referedEntity.beanName}Pagination = ${js}scope.grid${ent.referedEntity.name}Options.getPagination();

    ${js}scope.find${ent.referedEntity.name} = function() {
        console.log('Realizando busca de 1 x N( ${ent.referedEntity.beanName}.${entityBeanName}.id):' + ${js}scope.entity.id);
        ${js}scope.resultPage = null;
        ${ent.referedEntity.beanName}Service.search( {'content':{ '${entityBeanName}':{id:${js}scope.entity.id }},'pagination':${js}scope.grid${ent.referedEntity.name}Options.getPageRequest()}  , function (data) {
            ${js}scope.resultPage = data;
            try {
                ${js}scope.resultPage.content = jsog.decode(data.content);
            } catch (exception) {
                console.log('Object with self rererence');
                ${js}scope.resultPage.content = data.content;
            }
        });
    };
    ${js}scope.search${ent.referedEntity.name} = function() {
        // TODO Implement query search with fields
        console.log('Realizando busca de 1 x N( ${ent.referedEntity.beanName}.${entityBeanName}.id):' + ${js}scope.entity.id);
        ${js}scope.resultPage = null;
        ${ent.referedEntity.beanName}Service.search( {'content':{ '${entityBeanName}':{id:${js}scope.entity.id }},'pagination':${js}scope.grid${ent.referedEntity.name}Options.getPageRequest()}  , function (data) {
            ${js}scope.resultPage = data;
            try {
                ${js}scope.resultPage.content = jsog.decode(data.content);
            } catch (exception) {
                console.log('Object with self rererence');
                ${js}scope.resultPage.content = data.content;
            }
        });
    };
    ${js}scope.remove${ent.referedEntity.name} = function (obj){
        console.log('Deleting ${ent.referedEntity.beanName} with id:' + obj.id);
        ${ent.referedEntity.beanName}Service.remove( obj , function ( successResult) {
            console.log(successResult);
            ${js}scope.entity = {};
        });
    };
    ${js}scope.edit${ent.referedEntity.name} = function (obj) {
        ${js}scope.selected${ent.referedEntity.name} = obj
        ${js}location.path('/${entity.name}/'+ ${js}scope.entity.id +'/${ent.referedEntity.name}/' + obj.id );
    };
    ${js}scope.create${ent.referedEntity.name} = function (obj) {
        ${js}scope.selected${ent.referedEntity.name} = ${ent.referedEntity.beanName}Service.create();
        ${js}scope.selected${ent.referedEntity.name}.${entity.beanName} = ${js}scope.entity;
        ${js}location.path('/${entity.name}/'+ ${js}scope.entity.id +'/${ent.referedEntity.name}/');
    };

    ${js}scope.${ent.referedEntity.beanName}PaginationChanged = function(newPage) {
        ${js}scope.${ent.referedEntity.beanName}Pagination.currentPage = newPage;
        ${js}scope.find${ent.referedEntity.name}();
    };

#{end}
#{end}

    ${js}scope.clear = function () {
        ${js}scope.selected = null;
    };

}]);
