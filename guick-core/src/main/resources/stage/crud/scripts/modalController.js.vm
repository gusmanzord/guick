#set( $js  = "$")
#set( $open  = "${")
#set( $close = "}")
#set( $projectBeanName = ${util.uncapitalize($project.name)} )
'use strict';

// Please note that $modalInstance represents a modal window (instance) dependency.
// It is not the same as the $modal service used above.
#foreach( ${entity} in ${project.metadata.entities})
#set( $entityBeanName = ${util.uncapitalize($entity.name)} )
angular.module('${projectBeanName}App').controller('Modal${entity.name}Controller', ['${js}scope', '${js}modalInstance', 'jsog', '${entityBeanName}Service', #foreach( ${ent} in ${entity.getDistinctedAllComplexProperties()})#set( $beanName = ${util.uncapitalize($ent.referedEntity.name)} )#if(${beanName} != ${entityBeanName})'${beanName}Service', #{end}#{end} 'data',  function (${js}scope, ${js}modalInstance, jsog, ${entityBeanName}Service #foreach( ${ent} in ${entity.getDistinctedAllComplexProperties()})#set( $beanName = ${util.uncapitalize($ent.referedEntity.name)} )#if(${beanName} != ${entityBeanName}), ${beanName}Service#{end}#{end} , data) {
    console.log('View/Editing Modal' );
    console.log(data);
    ${js}scope.entity = data;//.$entity.beanName;
    ${js}scope.searchSelects = ${entityBeanName}Service.factorySearchSelect();
    ${js}scope.searchSelects.fromEntity(${js}scope.entity);

    // Selects to Fullfill select boxes
    // Begin block
#foreach( ${ent} in ${entity.getManyToOneProperties()})
#if( ${ent.referedEntity.table.count} < 200) ## Caso nao seja muito grande para um select box ...
#set( $beanName = ${util.uncapitalize($ent.referedEntity.name)} )
    ${beanName}Service.findAll( {page:1 , size:${js}scope.maxSelectBoxSize}  , function (data) {
         ${js}scope.${beanName}List = data.content;
    });
#{end}
#end
    // end block

    ${js}scope.save = function () {
        console.log('Saving Modal' );
        ${js}scope.searchSelects.toEntity(${js}scope.entity);
        ${entityBeanName}Service.save( ${js}scope.entity , function (successResult) {
            console.log(successResult);
            ${js}scope.entity = {};
            ${js}modalInstance.close(${js}scope.entity);
        });
    };

    ${js}scope.cancel = function () {
        ${js}modalInstance.dismiss('cancel');
    };
}]);

#end