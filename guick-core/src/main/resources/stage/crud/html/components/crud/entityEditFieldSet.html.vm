#set( $js  = "$")
#set( $entityBeanName = ${util.uncapitalize($entity.name)} )
#set( $projectBeanName = ${util.uncapitalize($project.name)} )
#set( $bigFieldSize = 100)

#set( $idAgragation = '' )
#foreach( ${property} in ${entity.properties})
#if(${property.column.length} >= ${bigFieldSize})
#parse( "stage/crud/html/property.html.vm" )
#end
#end
#foreach( ${property} in ${entity.parent.getProperties()})
#if(${property.column.length} >= ${bigFieldSize})
#parse( "stage/crud/html/property.html.vm" )
#end
#end
#foreach( ${property} in ${entity.id.getProperties()})
#set( $idAgragation = 'id.' )
#if(${property.column.length} >= ${bigFieldSize})
#parse( "stage/crud/html/property.html.vm" )
#end
#end

#foreach( ${complexProperty} in ${entity.getManyToOneProperties()})
#set( $beanName = ${util.uncapitalize($complexProperty.name)} )
#if(${complexProperty.referedEntity.table.count} < 200)
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <${beanName}-select></${beanName}-select>
                                    </div>
                                </div>
#else
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label class="control-label">${complexProperty.title}</label>
                                        <angucomplete-alt id="${idAgragation}${beanName}AutoComplete"
                                              placeholder="Busca por #set($size = ${complexProperty.referedEntity.properties.size()} )#set($counter = 0)#foreach( ${prop} in ${complexProperty.referedEntity.properties})#set($counter = $counter + 1)#if(${prop.type} == 'String')${prop}#if($counter < $size) ou #{end}#{end}#{end}"
                                              name="${beanName}"
                                              pause="400"
                                              selected-object="${complexProperty}.select"
                                              remote-url="http://localhost:8080/${complexProperty.referedEntity.name}/searchText?text="
                                              remote-url-data-field="content"
                                              title-field="#set($size = ${complexProperty.referedEntity.properties.size()} )#set($counter = 0)#foreach( ${prop} in ${complexProperty.referedEntity.properties})#set($counter = $counter + 1)#if(${prop.type} == 'String')${prop}#if($counter < $size),#{end}#{end}#{end}"
#if (${complexProperty.referedEntity.looksLikeDomain()} && ${complexProperty.referedEntity.getManyToOneProperties().size()} >=1 )
#set( $toOneProperty = ${complexProperty.referedEntity.getManyToOneProperties()[0]} )
### find first StringField
#set ( $stringField = 'id' )
#foreach( ${prop} in ${toOneProperty.referedEntity.properties})
#if(${prop.type} == 'String' && $stringField == 'id' )
#set ($stringField = ${prop})
#end
#end
                                              description-field="${toOneProperty.name}.${stringField}"
#end
                                              input-class="form-control"
                                              field-required="true"
                                              auto-match="true"
                                              remote-url-response-formatter="formata${complexProperty}Array"/>
                                    </div>
                                </div>
#end
#end

#foreach( ${property} in ${entity.properties})
#if(${property.column.length} < ${bigFieldSize})
#parse( "stage/crud/html/property.html.vm" )
#end
#end
