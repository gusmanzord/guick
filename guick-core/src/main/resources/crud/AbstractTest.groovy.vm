package ${project.group}.${project.name};

import org.junit.runner.RunWith
import org.slf4j.Logger
import org.slf4j.LoggerFactory
import org.springframework.jdbc.datasource.SimpleDriverDataSource
import org.springframework.test.context.ContextConfiguration
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner

import javax.annotation.Resource
import java.sql.Connection
import java.sql.Statement

/**
 *  Abstract Test
 *  Guick Generate class:
 *  https://github.com/wdavilaneto/guick
 *  Author: service-wdavilaneto@redhat.com
 */
@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(locations = ["classpath:application.xml"])
abstract class AbstractTest {

    @Resource(name = "dataSource")
    private SimpleDriverDataSource dataSource

    private static final Logger LOGGER = LoggerFactory.getLogger(AbstractTest.class);

    void setUp() {
        ensureDatabaseModel()

    }

    protected ensureDatabaseModel() {
        if (LOGGER.isDebugEnabled()) {
            LOGGER.debug("Ensuring Database Schema ")
        }
        Connection connection;
        try {
            connection = dataSource.getConnection();
            String script = AbstractTest.class.classLoader.getResourceAsStream('schema.sql').text
            final Statement stmt = connection.createStatement();
            stmt.executeUpdate(script);
            stmt.close();
            connection.close();
        } catch (Exception e) {
            LOGGER.error("Error trying to update shcema " ,e)
            if (connection!= null) {
                connection.close()
            }
        }
    }
}